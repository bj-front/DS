import { generatedMenuItems, type MenuItemOrSection } from '@/generated/menu-structure'
import { computed, type ComputedRef } from 'vue'

/**
 * Composable pour utiliser le menu généré automatiquement
 * basé sur la structure des composants du design system
 */
export function useGeneratedMenu(): {
  autoGeneratedItems: ComputedRef<MenuItemOrSection[]>
  completeMenuItems: ComputedRef<MenuItemOrSection[]>
  menuItems: ComputedRef<MenuItemOrSection[]>
} {
  // Menu items générés automatiquement
  const autoGeneratedItems = computed<MenuItemOrSection[]>(() => {
    return generatedMenuItems
  })

  // Menu items avec ajouts manuels (couleurs, showcase, etc.)
  const completeMenuItems = computed<MenuItemOrSection[]>(() => {
    const items: MenuItemOrSection[] = [...autoGeneratedItems.value]
    
    // Insérer les pages custom à des positions spécifiques
    const insertAfterAtoms = items.findIndex(item => 
      'type' in item && item.type === 'section' && item.key === 'atoms-section'
    )
    
    if (insertAfterAtoms !== -1) {
      // Trouver la fin de la section atoms
      let endOfAtoms = insertAfterAtoms + 1
      while (endOfAtoms < items.length) {
        const currentItem = items[endOfAtoms]
        if (currentItem && 'type' in currentItem && currentItem.type === 'section') {
          break
        }
        endOfAtoms++
      }
      
      // Insérer les pages custom après la section atoms
      const customItems: MenuItemOrSection[] = [
        {
          key: 'design-section',
          type: 'section',
          label: 'Design Tokens'
        },
        {
          key: 'colors',
          label: 'Couleurs',
          icon: 'Palette',
          to: '/design-system/colors'
        },
        {
          key: 'icons',
          label: 'Icônes',
          icon: 'Search',
          to: '/design-system/icons'
        }
      ]
      
      items.splice(endOfAtoms, 0, ...customItems)
    }
    
    // Ajouter la section showcase à la fin
    items.push(
      {
        key: 'showcase-section',
        type: 'section',
        label: 'Exemples'
      },
      {
        key: 'showcase',
        label: 'Showcase',
        icon: 'Frame',
        to: '/showcase'
      }
    )
    
    return items
  })

  return {
    autoGeneratedItems,
    completeMenuItems,
    // Alias pour compatibilité
    menuItems: completeMenuItems
  }
}