import './assets/main.css'

import { SpeedInsights } from '@vercel/speed-insights/vue'
import { createPinia } from 'pinia'
import { createApp } from 'vue'

import App from './App.vue'
import router from './domains/shared/router'

// Import du design system Utopia (styles des composants)
import '@club-employes/utopia/styles'

// Import de la fonction d'initialisation du th√®me
import { initializeTheme, isValidThemeName, type ThemeName } from '@club-employes/utopia'

/**
 * D√©termine le th√®me √† charger en fonction de l'URL
 * Permet de tester diff√©rents th√®mes via le param√®tre ?theme=...
 */
function getThemeFromUrl(): ThemeName {
  // V√©rifier si un th√®me est sp√©cifi√© dans l'URL
  const urlParams = new URLSearchParams(window.location.search)
  const themeParam = urlParams.get('theme')
  
  if (themeParam && isValidThemeName(themeParam)) {
    console.log('üé® Theme from URL parameter:', themeParam)
    return themeParam
  }
  
  // D√©tecter depuis le domaine en production
  const hostname = window.location.hostname
  
  if (hostname.includes('gifteo')) {
    console.log('üé® Theme detected from domain: gifteo-light')
    return 'gifteo-light'
  }
  
  // Fallback par d√©faut
  console.log('üé® Using default theme: club-employes-light')
  return 'club-employes-light'
}

/**
 * Bootstrap de l'application avec initialisation du th√®me
 */
async function bootstrap(): Promise<void> {
  const themeName = getThemeFromUrl()
  
  console.log('üöÄ Bootstrapping application...')
  console.log('üåç Hostname:', window.location.hostname)
  console.log('üé® Theme to load:', themeName)
  
  try {
    // üé® Initialiser le th√®me AVANT de cr√©er l'app Vue (√©vite le FOUC)
    await initializeTheme(themeName)
    console.log('‚úÖ Theme initialized successfully:', themeName)
    
    // üîì D√©verrouiller la marque pour utopia-website (showcase/demo)
    // Cela permet de tester tous les th√®mes depuis l'interface
    // unlockBrand()
    console.log('üîì Brand unlocked for showcase/demo purposes')
  } catch (error) {
    console.error('‚ùå Failed to initialize theme:', error)
    // En cas d'erreur, tenter avec le th√®me par d√©faut
    try {
      await initializeTheme('club-employes-light')
    //   unlockBrand() // D√©verrouiller m√™me en cas d'erreur
      console.log('‚úÖ Fallback theme loaded')
    } catch (fallbackError) {
      console.error('‚ùå Critical: Could not load any theme:', fallbackError)
    }
  }
  
  // Cr√©er l'application Vue (le th√®me est d√©j√† charg√©, pas de FOUC!)
  const app = createApp(App)
  
  app.use(createPinia())
  app.use(router)
  
  app.mount('#app')
  
  // Ajouter Speed Insights
  app.component('SpeedInsights', SpeedInsights)
  
  console.log('‚úÖ Application mounted')
}

// D√©marrer l'application
bootstrap()
