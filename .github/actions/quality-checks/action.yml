name: 'Quality Checks'
description: 'Run lint, type-check and validation for any package'

inputs:
  package-filter:
    description: 'Turborepo filter for the package to check'
    required: true
  include-dependencies:
    description: 'Include dependencies in checks'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: 🔍 Lint code
      shell: bash
      run: |
        if [ "${{ inputs.include-dependencies }}" = "true" ]; then
          npx turbo lint --filter=...${{ inputs.package-filter }}
        else
          npx turbo lint --filter=${{ inputs.package-filter }}
        fi

    - name: 🔍 Type check
      shell: bash
      run: |
        if [ "${{ inputs.include-dependencies }}" = "true" ]; then
          npx turbo type-check --filter=...${{ inputs.package-filter }}
        else
          npx turbo type-check --filter=${{ inputs.package-filter }}
        fi

    - name: 🎨 Validate design system tokens (if applicable)
      shell: bash
      run: |
        # Check if validate:design-system task exists for this package
        if npx turbo run validate:design-system --filter=${{ inputs.package-filter }} --dry-run 2>/dev/null; then
          if [ "${{ inputs.include-dependencies }}" = "true" ]; then
            npx turbo validate:design-system --filter=...${{ inputs.package-filter }}
          else
            npx turbo validate:design-system --filter=${{ inputs.package-filter }}
          fi
        else
          echo "✅ No design system validation needed for this package"
        fi

    - name: 🧪 Run tests
      shell: bash
      run: |
        # Check if test task exists for this package
        if npx turbo run test --filter=${{ inputs.package-filter }} --dry-run 2>/dev/null; then
          if [ "${{ inputs.include-dependencies }}" = "true" ]; then
            npx turbo test --filter=...${{ inputs.package-filter }}
          else
            npx turbo test --filter=${{ inputs.package-filter }}
          fi
        else
          echo "✅ No tests configured for this package"
        fi