name: Design System CI/CD

on:
  push:
    branches: ['**']
    paths:
      - 'packages/utopia/**'
      - '.github/workflows/design-system.yml'
      - '.github/actions/setup-node-cache/**'
      - '.github/actions/build-design-system/**'
      - '.github/actions/quality-checks/**'
      - 'package.json'
      - 'turbo.json'
  pull_request:
    branches: [main]
    paths:
      - 'packages/utopia/**'
      - '.github/workflows/design-system.yml'
      - '.github/actions/setup-node-cache/**'
      - '.github/actions/build-design-system/**'
      - '.github/actions/quality-checks/**'
      - 'package.json'
      - 'turbo.json'
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force release to NPM (main branch only)'
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Tests et qualité du code
  quality-check:
    name: 🔍 Qualité & Tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚡ Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache
        with:
          cache-prefix: 'design-system'

      - name: 🎨 Build Design System
        uses: ./.github/actions/build-design-system

      - name: 🔄 Auto Create Changeset
        if: github.event_name == 'push' && github.ref != 'refs/heads/main'
        uses: ./.github/actions/auto-changeset
        with:
          github-token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          branch-name: ${{ github.ref_name }}

      - name: 🔄 Create or update Pull Request
        if: github.event_name == 'push' && github.ref != 'refs/heads/main'
        uses: ./.github/actions/create-pr
        with:
          github-token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          project-type: 'design-system'

  

  # Job 3: Release et publication NPM (main branch uniquement)
  release:
    name: 📦 Release & Publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: packages/utopia
    permissions:
      contents: write
      pull-requests: write
      packages: write
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: ⚡ Setup Node.js and Cache
        uses: ./.github/actions/setup-node-cache
        with:
          cache-prefix: 'release'

      - name: 🔧 Configure NPM Registry
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: 🎨 Build Design System for Release
        uses: ./.github/actions/build-design-system

      - name: 🔐 Configure npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🚀 Create Release PR or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
          title: "🚀 Release: Version Packages"
          commit: "chore: version packages"
          setupGitUser: true
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📋 Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          PUBLISHED_PACKAGES='${{ steps.changesets.outputs.publishedPackages }}'
          VERSION=$(echo "$PUBLISHED_PACKAGES" | jq -r '.[0].version' 2>/dev/null || echo "")
          
          if [ -n "$VERSION" ] && [ "$VERSION" != "null" ]; then
            echo "📦 Creating release for version: $VERSION"
            
            # Créer le tag Git
            git tag "v$VERSION"
            git push origin "v$VERSION"
            
            # Créer la GitHub Release
            gh release create "v$VERSION" \
              --title "🚀 Design System v$VERSION" \
              --notes "🎨 New release of @club-employes/utopia design system

            **Installation:**
            \`\`\`bash
            npm install @club-employes/utopia@$VERSION
            \`\`\`
            
            **What's included:**
            - 🎨 Design tokens (colors, spacing, typography)  
            - 🧩 Vue 3 components
            - 📱 Responsive utilities
            - 🌙 Dark mode support
            " \
              --latest
              
            echo "✅ GitHub Release created: v$VERSION"
          else
            echo "ℹ️ No version information available, skipping GitHub release"
          fi