name: Auto Changeset

on:
  push:
    branches-ignore: [main]
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-changeset:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Detect changes and create changeset
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Configurer le token pour les push
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # Vérifier que le dossier .changeset existe
          if [ ! -d ".changeset" ]; then
            echo "❌ .changeset directory not found. Repository not properly configured for changesets."
            echo "Run: npm run changeset init"
            exit 1
          fi
          
          # Vérifier s'il y a déjà un changeset
          if [ -n "$(ls -A .changeset/*.md 2>/dev/null | grep -v README)" ]; then
            echo "✅ Changeset already exists, skipping auto-generation"
            exit 0
          fi
          
          # Détecter les changements
          COMPONENT_CHANGES=$(git diff --name-only origin/main...HEAD | grep -E "packages/utopia/src/components/" | wc -l)
          TOKEN_CHANGES=$(git diff --name-only origin/main...HEAD | grep -E "packages/utopia/src/tokens/" | wc -l)
          
          if [ "$COMPONENT_CHANGES" -gt 0 ] || [ "$TOKEN_CHANGES" -gt 0 ]; then
            echo "🔍 Detected changes in components or tokens"
            
            # Analyser les types de changements
            NEW_COMPONENTS=$(git diff --name-only origin/main...HEAD | grep -E "packages/utopia/src/components/.*\.vue$" | grep -v "demo/" | wc -l)
            UPDATED_COMPONENTS=$(git diff --name-only origin/main...HEAD | grep -E "packages/utopia/src/components/" | grep -v "demo/" | wc -l)
            UPDATED_TOKENS=$(git diff --name-only origin/main...HEAD | grep -E "packages/utopia/src/tokens/" | wc -l)
            
            # Déterminer le type de version
            if [ "$NEW_COMPONENTS" -gt 0 ]; then
              VERSION_TYPE="minor"
              CHANGE_SUMMARY="Add new components"
            elif [ "$UPDATED_TOKENS" -gt 0 ]; then
              VERSION_TYPE="minor" 
              CHANGE_SUMMARY="Update design tokens"
            else
              VERSION_TYPE="patch"
              CHANGE_SUMMARY="Update existing components"
            fi
            
            # Créer le changeset
            CHANGESET_FILE=".changeset/auto-$(date +%s).md"
            cat > "$CHANGESET_FILE" << EOF
          ---
          "@club-employes/utopia": $VERSION_TYPE
          ---
          
          $CHANGE_SUMMARY
          
          - Components changed: $UPDATED_COMPONENTS
          - Tokens changed: $UPDATED_TOKENS
          - New components: $NEW_COMPONENTS
          EOF
            
            echo "📝 Created automatic changeset: $CHANGESET_FILE"
            git add "$CHANGESET_FILE"
            git commit -m "chore: add automatic changeset for component/token changes"
            
            # Push vers la branche actuelle
            BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
            git push origin HEAD:"$BRANCH_NAME"
          else
            echo "ℹ️  No component or token changes detected"
          fi